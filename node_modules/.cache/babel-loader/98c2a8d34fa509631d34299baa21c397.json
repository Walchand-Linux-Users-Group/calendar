{"ast":null,"code":"import _regeneratorRuntime from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DateTime}from'luxon';import{connect}from'react-redux';import{setMonth}from'../actions/ui/month';import{submitReminder}from'../actions/ui/reminder';import{getMonth}from'../selectors/ui/month';import AppHeader from'./AppHeader';import{getMonthlyCalendarGrid,dateTimeStringsToMillis,millisToDateTimeStrings}from'../helpers/calendar';import MonthlyCalendar from'./calendar/MonthlyCalendar';import ReminderContainer from'./reminders/ReminderContainer';import Axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function setNavigationBarHeightCSSVariable(){var vh=window.innerHeight*0.01;document.documentElement.style.setProperty('--vh',vh+'px');}var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,first,last,minTime,maxTime,response,index,reminder,reminderToSet;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.addEventListener('resize',setNavigationBarHeightCSSVariable);if(this.props.month===null){this.props.dispatch(setMonth(DateTime.local().toFormat('yyyy-MM')));}data=getMonthlyCalendarGrid(DateTime.local().toFormat('yyyy-MM'));first=data[0].key;last=data[34].key;minTime=dateTimeStringsToMillis(first,\"00:00\");maxTime=dateTimeStringsToMillis(last,\"23:59\");_context.next=9;return Axios.post(\"http://calendar.wcewlug.org/api/get_remainder\",{min:minTime,max:maxTime});case 9:response=_context.sent;console.log(response);for(index in response.data){reminder=response.data[index];reminderToSet=_objectSpread(_objectSpread({},millisToDateTimeStrings(reminder.dateTime)),{},{id:reminder.id,event_type:reminder.event_type,color:reminder.color,platform:reminder.platform,topic:reminder.topic});this.props.dispatch(submitReminder({reminder:reminderToSet,init:true}));}// this.props.dispatch(submitReminder({reminder: {color: \"indigo-600\", ...millisToDateTimeStrings(1622546280000), event_type: \"Club Service\", id: \"3d2po4axvsypp9iops3bzo\", platform: \"Google Meet\", topic: \"Meta\"},init: true}));\n// this.props.dispatch(initReminders(DateTime.local().toFormat('yyyy-MM')));\ncase 12:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',setNavigationBarHeightCSSVariable);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"h-screen-nav-fix w-screen font-montserrat overflow-hidden bg-gray-50 text-gray-900\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full h-full flex flex-col\",children:[/*#__PURE__*/_jsx(AppHeader,{}),/*#__PURE__*/_jsx(MonthlyCalendar,{}),/*#__PURE__*/_jsx(ReminderContainer,{})]})});}}]);return App;}(Component);function mapStateToProps(state,props){return _objectSpread(_objectSpread({},props),{},{month:getMonth(state)});}export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/suyash/calendar/src/components/App.js"],"names":["React","Component","DateTime","connect","setMonth","submitReminder","getMonth","AppHeader","getMonthlyCalendarGrid","dateTimeStringsToMillis","millisToDateTimeStrings","MonthlyCalendar","ReminderContainer","Axios","setNavigationBarHeightCSSVariable","vh","window","innerHeight","document","documentElement","style","setProperty","App","addEventListener","props","month","dispatch","local","toFormat","data","first","key","last","minTime","maxTime","post","min","max","response","console","log","index","reminder","reminderToSet","dateTime","id","event_type","color","platform","topic","init","removeEventListener","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DateTime, } from 'luxon';\nimport { connect } from 'react-redux';\nimport { setMonth } from '../actions/ui/month';\nimport { submitReminder } from '../actions/ui/reminder';\nimport { getMonth } from '../selectors/ui/month';\nimport AppHeader from './AppHeader';\nimport { getMonthlyCalendarGrid, dateTimeStringsToMillis, millisToDateTimeStrings } from '../helpers/calendar';\nimport MonthlyCalendar from './calendar/MonthlyCalendar';\nimport ReminderContainer from './reminders/ReminderContainer';\nimport Axios from 'axios';\n\nfunction setNavigationBarHeightCSSVariable() {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', vh + 'px');\n}\n\nclass App extends Component {\n  async componentDidMount() {\n    window.addEventListener('resize', setNavigationBarHeightCSSVariable);\n\n    if (this.props.month === null) {\n      this.props.dispatch(setMonth(DateTime.local().toFormat('yyyy-MM')));\n    }\n\n    const data = getMonthlyCalendarGrid(DateTime.local().toFormat('yyyy-MM'));\n\n    const first = data[0].key;\n    const last = data[34].key;\n\n    const minTime = dateTimeStringsToMillis(first,\"00:00\");\n    const maxTime = dateTimeStringsToMillis(last,\"23:59\");\n\n    const response = await Axios.post(\"http://calendar.wcewlug.org/api/get_remainder\",{min: minTime, max: maxTime});\n    console.log(response);\n    for(const index in response.data) {\n      const reminder = response.data[index];\n\n      const reminderToSet = {\n        ...millisToDateTimeStrings(reminder.dateTime),\n        id: reminder.id,\n        event_type: reminder.event_type,\n        color: reminder.color,\n        platform: reminder.platform,\n        topic: reminder.topic,\n      };\n\n      this.props.dispatch(submitReminder({reminder: reminderToSet,init: true}));\n    }\n\n    // this.props.dispatch(submitReminder({reminder: {color: \"indigo-600\", ...millisToDateTimeStrings(1622546280000), event_type: \"Club Service\", id: \"3d2po4axvsypp9iops3bzo\", platform: \"Google Meet\", topic: \"Meta\"},init: true}));\n\n    // this.props.dispatch(initReminders(DateTime.local().toFormat('yyyy-MM')));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', setNavigationBarHeightCSSVariable);\n  }\n\n  render() {\n    return (\n      <div className=\"h-screen-nav-fix w-screen font-montserrat overflow-hidden bg-gray-50 text-gray-900\">\n        <div className=\"w-full h-full flex flex-col\">\n          <AppHeader />\n          <MonthlyCalendar />\n          <ReminderContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    ...props,\n    month: getMonth(state),\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}