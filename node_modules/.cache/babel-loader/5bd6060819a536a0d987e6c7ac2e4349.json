{"ast":null,"code":"import _regeneratorRuntime from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(openReminder),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(newReminder),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(editReminder),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(submitReminder),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchNewReminder),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(watchEditReminder),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(watchSubmitReminder);import{DateTime}from'luxon';import{apply,call,put,takeEvery}from'redux-saga/effects';import{setDateReminder}from'../../actions/dates';import{setReminder}from'../../actions/reminders';import*as reminderUIActions from'../../actions/ui/reminder';import{dateTimeStringsToMillis,DATE_FORMAT}from'../../helpers/calendar';import{DEFAULT_COLOR}from'../../helpers/colors';import{generateUUID}from'../../helpers/uuid';import Axios from'axios';export function openReminder(reminder){return _regeneratorRuntime.wrap(function openReminder$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(reminderUIActions.openReminder(reminder));case 2:case\"end\":return _context.stop();}}},_marked);}export function newReminder(action){var initialDate,initialDateTime,parsed,initialColor,reminder;return _regeneratorRuntime.wrap(function newReminder$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:initialDate=action.payload;_context2.next=3;return apply(DateTime,'local');case 3:initialDateTime=_context2.sent;if(initialDate){parsed=DateTime.fromFormat(initialDate,DATE_FORMAT);if(parsed.isValid){initialDateTime=initialDateTime.set({year:parsed.year,month:parsed.month,day:parsed.day});}}initialColor=DEFAULT_COLOR;reminder={id:null,event_type:'',color:initialColor,dateTime:initialDateTime.toMillis(),platform:'',topic:''};_context2.next=9;return call(openReminder,reminder);case 9:case\"end\":return _context2.stop();}}},_marked2);}export function editReminder(action){return _regeneratorRuntime.wrap(function editReminder$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return call(openReminder,action.payload);case 2:case\"end\":return _context3.stop();}}},_marked3);}export function submitReminder(action){var reminder,id,reminderToSet,dateReminder;return _regeneratorRuntime.wrap(function submitReminder$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(action);if(action.payload.init){reminder=action.payload.reminder;}else{reminder=action.payload;}id=reminder.id;if(id){_context4.next=7;break;}_context4.next=6;return call(generateUUID);case 6:id=_context4.sent;case 7:reminderToSet={id:id,event_type:reminder.event_type,color:reminder.color,dateTime:dateTimeStringsToMillis(reminder.date,reminder.time),platform:reminder.platform,topic:reminder.topic};dateReminder={date:reminder.date,reminderId:reminderToSet.id};// TODO: Save do IDB (with dexie)\n_context4.next=11;return put(setReminder(reminderToSet));case 11:_context4.next=13;return put(setDateReminder(dateReminder));case 13:if(action.payload.init){_context4.next=17;break;}Axios.post(\"http://calendar.wcewlug.org/api/set_remainder\",reminderToSet).then(function(response){console.log(response);});_context4.next=17;return put(reminderUIActions.closeReminder());case 17:console.log(reminderToSet);case 18:case\"end\":return _context4.stop();}}},_marked4);}export function watchNewReminder(){return _regeneratorRuntime.wrap(function watchNewReminder$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return takeEvery(reminderUIActions.NEW_REMINDER,newReminder);case 2:case\"end\":return _context5.stop();}}},_marked5);}export function watchEditReminder(){return _regeneratorRuntime.wrap(function watchEditReminder$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeEvery(reminderUIActions.EDIT_REMINDER,editReminder);case 2:case\"end\":return _context6.stop();}}},_marked6);}export function watchSubmitReminder(){return _regeneratorRuntime.wrap(function watchSubmitReminder$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return takeEvery(reminderUIActions.SUBMIT_REMINDER,submitReminder);case 2:case\"end\":return _context7.stop();}}},_marked7);}","map":{"version":3,"sources":["/home/suyash/calendar/src/sagas/ui/reminder.js"],"names":["openReminder","newReminder","editReminder","submitReminder","watchNewReminder","watchEditReminder","watchSubmitReminder","DateTime","apply","call","put","takeEvery","setDateReminder","setReminder","reminderUIActions","dateTimeStringsToMillis","DATE_FORMAT","DEFAULT_COLOR","generateUUID","Axios","reminder","action","initialDate","payload","initialDateTime","parsed","fromFormat","isValid","set","year","month","day","initialColor","id","event_type","color","dateTime","toMillis","platform","topic","console","log","init","reminderToSet","date","time","dateReminder","reminderId","post","then","response","closeReminder","NEW_REMINDER","EDIT_REMINDER","SUBMIT_REMINDER"],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport { apply, call, put, takeEvery } from 'redux-saga/effects';\nimport { setDateReminder } from '../../actions/dates';\nimport { setReminder } from '../../actions/reminders';\nimport * as reminderUIActions from '../../actions/ui/reminder';\nimport { dateTimeStringsToMillis, DATE_FORMAT } from '../../helpers/calendar';\nimport { DEFAULT_COLOR } from '../../helpers/colors';\nimport { generateUUID } from '../../helpers/uuid';\nimport Axios from 'axios';\n\nexport function* openReminder(reminder) {\n  yield put(reminderUIActions.openReminder(reminder));\n}\n\nexport function* newReminder(action) {\n  const initialDate = action.payload;\n  let initialDateTime = yield apply(DateTime, 'local');\n\n  if (initialDate) {\n    const parsed = DateTime.fromFormat(initialDate, DATE_FORMAT);\n    if (parsed.isValid) {\n      initialDateTime = initialDateTime.set({\n        year: parsed.year,\n        month: parsed.month,\n        day: parsed.day,\n      });\n    }\n  }\n\n  const initialColor = DEFAULT_COLOR;\n\n  const reminder = {\n    id: null,\n    event_type: '',\n    color: initialColor,\n    dateTime: initialDateTime.toMillis(),\n    platform: '',\n    topic: '',\n  };\n\n  yield call(openReminder, reminder);\n}\n\nexport function* editReminder(action) {\n  yield call(openReminder, action.payload);\n}\n\nexport function* submitReminder(action) {\n  console.log(action);\n\n  var reminder;\n\n  if(action.payload.init){\n      reminder = action.payload.reminder;\n  }\n  else{\n    reminder = action.payload;\n  }\n\n  let id = reminder.id;\n  \n  if (!id) {\n    id = yield call(generateUUID);\n  }\n\n  const reminderToSet = {\n    id,\n    event_type: reminder.event_type,\n    color: reminder.color,\n    dateTime: dateTimeStringsToMillis(reminder.date, reminder.time),\n    platform: reminder.platform,\n    topic: reminder.topic,\n  };\n\n  const dateReminder = { date: reminder.date, reminderId: reminderToSet.id };\n\n  // TODO: Save do IDB (with dexie)\n\n  yield put(setReminder(reminderToSet));\n  yield put(setDateReminder(dateReminder));\n\n  /*\n    API call to update te content\n  */\n  if(!action.payload.init)\n  {\n    Axios.post(\"http://calendar.wcewlug.org/api/set_remainder\",reminderToSet).then(function (response) {\n      console.log(response);\n    })\n\n    yield put(reminderUIActions.closeReminder());\n  }\n\n  console.log(reminderToSet);\n}\n\nexport function* watchNewReminder() {\n  yield takeEvery(reminderUIActions.NEW_REMINDER, newReminder);\n}\n\nexport function* watchEditReminder() {\n  yield takeEvery(reminderUIActions.EDIT_REMINDER, editReminder);\n}\n\nexport function* watchSubmitReminder() {\n  yield takeEvery(reminderUIActions.SUBMIT_REMINDER, submitReminder);\n}\n"]},"metadata":{},"sourceType":"module"}