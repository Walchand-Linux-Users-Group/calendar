{"ast":null,"code":"import _classCallCheck from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,createRef}from'react';import classNames from'classnames';import ReminderColorCircle from'./ReminderColorCircle';import ExpandIcon from'../icons/ExpandIcon';import{ALL_COLORS}from'../../helpers/colors';import ReminderColorPickerItem from'./ReminderColorPickerItem';// Should be used with Formik.Field `as` prop\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReminderColorPicker=/*#__PURE__*/function(_Component){_inherits(ReminderColorPicker,_Component);var _super=_createSuper(ReminderColorPicker);function ReminderColorPicker(props){var _this;_classCallCheck(this,ReminderColorPicker);_this=_super.call(this,props);_this.state={open:false};_this.toggleOpen=function(){_this.setState(function(prevState){return{open:!prevState.open};});};_this.close=function(){_this.setState(function(){return{open:false};});};_this.handleOutsideClick=function(e){if(_this.ref.current!==null&&!_this.ref.current.contains(e.target)){_this.close();}};_this.handleSelectColor=function(colorName){_this.props.onChange({target:{name:_this.props.name,value:colorName}});_this.close();};_this.renderColorList=function(){var value=_this.props.value;return/*#__PURE__*/_jsx(\"div\",{className:\"absolute mt-1 w-full rounded-md bg-white shadow-lg\",children:/*#__PURE__*/_jsx(\"ul\",{tabIndex:\"0\",role:\"listbox\",\"aria-labelledby\":\"listbox-label\",\"aria-activedescendant\":\"listbox-item-3\",className:\"max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\",children:ALL_COLORS.filter(function(color){return color!==value;}).map(function(colorName){return/*#__PURE__*/_jsx(ReminderColorPickerItem,{colorName:colorName,onClick:function onClick(){return _this.handleSelectColor(colorName);}},colorName);})})});};_this.ref=/*#__PURE__*/createRef();return _this;}_createClass(ReminderColorPicker,[{key:\"componentDidMount\",value:function componentDidMount(){document.addEventListener('click',this.handleOutsideClick);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.removeEventListener('click',this.handleOutsideClick);}},{key:\"render\",value:function render(){var _this$props=this.props,className=_this$props.className,name=_this$props.name,value=_this$props.value;return/*#__PURE__*/_jsxs(\"div\",{ref:this.ref,name:name,className:\"relative\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",\"aria-haspopup\":\"listbox\",\"aria-expanded\":\"true\",\"aria-labelledby\":\"listbox-label\",className:classNames('relative w-auto bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm',className),onClick:this.toggleOpen,children:[/*#__PURE__*/_jsx(\"span\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(ReminderColorCircle,{colorName:value})}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",children:/*#__PURE__*/_jsx(ExpandIcon,{svgClassName:\"h-5 w-5 text-gray-400\"})})]}),this.state.open&&this.renderColorList()]});}}]);return ReminderColorPicker;}(Component);export default ReminderColorPicker;","map":{"version":3,"sources":["/home/suyash/calendar/src/components/reminders/ReminderColorPicker.js"],"names":["React","Component","createRef","classNames","ReminderColorCircle","ExpandIcon","ALL_COLORS","ReminderColorPickerItem","ReminderColorPicker","props","state","open","toggleOpen","setState","prevState","close","handleOutsideClick","e","ref","current","contains","target","handleSelectColor","colorName","onChange","name","value","renderColorList","filter","color","map","document","addEventListener","removeEventListener","className"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ReminderColorCircle from './ReminderColorCircle';\nimport ExpandIcon from '../icons/ExpandIcon';\nimport { ALL_COLORS } from '../../helpers/colors';\nimport ReminderColorPickerItem from './ReminderColorPickerItem';\n\n// Should be used with Formik.Field `as` prop\nclass ReminderColorPicker extends Component {\n  static propTypes = {\n    value: PropTypes.oneOf(ALL_COLORS).isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.ref = createRef();\n  }\n\n  state = {\n    open: false,\n  };\n\n  toggleOpen = () => {\n    this.setState((prevState) => ({\n      open: !prevState.open,\n    }));\n  };\n\n  close = () => {\n    this.setState(() => ({\n      open: false,\n    }));\n  };\n\n  handleOutsideClick = (e) => {\n    if (this.ref.current !== null && !this.ref.current.contains(e.target)) {\n      this.close();\n    }\n  };\n\n  handleSelectColor = (colorName) => {\n    this.props.onChange({\n      target: {\n        name: this.props.name,\n        value: colorName,\n      },\n    });\n    this.close();\n  };\n\n  renderColorList = () => {\n    const { value } = this.props;\n\n    return (\n      <div className=\"absolute mt-1 w-full rounded-md bg-white shadow-lg\">\n        <ul\n          tabIndex=\"0\"\n          role=\"listbox\"\n          aria-labelledby=\"listbox-label\"\n          aria-activedescendant=\"listbox-item-3\"\n          className=\"max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n        >\n          {ALL_COLORS.filter((color) => color !== value).map((colorName) => (\n            <ReminderColorPickerItem\n              key={colorName}\n              colorName={colorName}\n              onClick={() => this.handleSelectColor(colorName)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  render() {\n    const { className, name, value } = this.props;\n\n    return (\n      <div ref={this.ref} name={name} className=\"relative\">\n        <button\n          type=\"button\"\n          aria-haspopup=\"listbox\"\n          aria-expanded=\"true\"\n          aria-labelledby=\"listbox-label\"\n          className={classNames(\n            'relative w-auto bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm',\n            className\n          )}\n          onClick={this.toggleOpen}\n        >\n          <span className=\"flex items-center\">\n            <ReminderColorCircle colorName={value} />\n          </span>\n          <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n            <ExpandIcon svgClassName=\"h-5 w-5 text-gray-400\" />\n          </span>\n        </button>\n\n        {this.state.open && this.renderColorList()}\n      </div>\n    );\n  }\n}\n\nexport default ReminderColorPicker;\n"]},"metadata":{},"sourceType":"module"}