{"ast":null,"code":"import _objectSpread from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"field\",\"form\",\"className\"];import React from'react';import classNames from'classnames';// Should be used with Formik.Field component prop\nimport{jsx as _jsx}from\"react/jsx-runtime\";function FormDatePicker(_ref){var field=_ref.field,_ref$form=_ref.form,touched=_ref$form.touched,errors=_ref$form.errors,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);var hasError=touched[field.name]&&Boolean(errors[field.name]);return/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"date\",className:classNames('placeholder-gray-400 bg-white border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm rounded-md',{'ring-2 ring-red-500':hasError},className)},field),props));}export default FormDatePicker;","map":{"version":3,"sources":["/home/suyash/calendar/src/components/shared/forms/FormDatePicker.js"],"names":["React","classNames","FormDatePicker","field","form","touched","errors","className","props","hasError","name","Boolean"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;2CACA,QAASC,CAAAA,cAAT,MAKG,IAJDC,CAAAA,KAIC,MAJDA,KAIC,gBAHDC,IAGC,CAHOC,OAGP,WAHOA,OAGP,CAHgBC,MAGhB,WAHgBA,MAGhB,CAFDC,SAEC,MAFDA,SAEC,CADEC,KACF,0CACD,GAAMC,CAAAA,QAAQ,CAAGJ,OAAO,CAACF,KAAK,CAACO,IAAP,CAAP,EAAuBC,OAAO,CAACL,MAAM,CAACH,KAAK,CAACO,IAAP,CAAP,CAA/C,CAEA,mBACE,0CACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAET,UAAU,CACnB,+HADmB,CAEnB,CACE,sBAAuBQ,QADzB,CAFmB,CAKnBF,SALmB,CAFvB,EASMJ,KATN,EAUMK,KAVN,EADF,CAcD,CAED,cAAeN,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\n// Should be used with Formik.Field component prop\nfunction FormDatePicker({\n  field,\n  form: { touched, errors },\n  className,\n  ...props\n}) {\n  const hasError = touched[field.name] && Boolean(errors[field.name]);\n\n  return (\n    <input\n      type=\"date\"\n      className={classNames(\n        'placeholder-gray-400 bg-white border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm rounded-md',\n        {\n          'ring-2 ring-red-500': hasError,\n        },\n        className\n      )}\n      {...field}\n      {...props}\n    />\n  );\n}\n\nexport default FormDatePicker;\n"]},"metadata":{},"sourceType":"module"}