{"ast":null,"code":"import _classCallCheck from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import*as Yup from'yup';import FormTextInput from'../shared/forms/FormTextInput';import FormDatePicker from'../shared/forms/FormDatePicker';import FormErrorMessage from'../shared/forms/FormErrorMessage';import FormLabel from'../shared/forms/FormLabel';import FormFieldset from'../shared/forms/FormFieldset';import BaseButton from'../shared/buttons/BaseButton';import FormActions from'../shared/forms/FormActions';import CheckIcon from'../icons/CheckIcon';import{DATE_FORMAT,DATE_REGEX,TIME_FORMAT,TIME_REGEX}from'../../helpers/calendar';import FormTimePicker from'../shared/forms/FormTimePicker';import ReminderColorPicker from'./ReminderColorPicker';import{ALL_COLORS}from'../../helpers/colors';import{ReminderPropType}from'../shared/prop-types/reminder';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReminderSchema=Yup.object().shape({event_type:Yup.string().max(30,'No more than 30 character, please.').required('Please enter Event Type (max. 30 characters).'),topic:Yup.string().max(30,'No more than 30 character, please.').required('Please enter Event Topic (max. 30 characters).'),color:Yup.string().oneOf(ALL_COLORS,'Color is invalid.').required('Please inform a color.'),date:Yup.string().matches(DATE_REGEX,\"Date must be valid (\".concat(DATE_FORMAT,\").\")).required('Please inform the day you want to get reminded.'),time:Yup.string().matches(TIME_REGEX,\"Time must be valid (\".concat(TIME_FORMAT,\").\")).required('Please inform the time of the day you want to get reminded.'),platform:Yup.string().max(30,'No more than 30 character, please.').required('Please enter Event platform (max. 30 characters).')});var ReminderForm=/*#__PURE__*/function(_Component){_inherits(ReminderForm,_Component);var _super=_createSuper(ReminderForm);function ReminderForm(){var _this;_classCallCheck(this,ReminderForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getInitialValues=function(){var _this$props$reminder=_this.props.reminder,event_type=_this$props$reminder.event_type,color=_this$props$reminder.color,topic=_this$props$reminder.topic,date=_this$props$reminder.date,time=_this$props$reminder.time,platform=_this$props$reminder.platform;return{event_type:event_type,color:color,topic:topic,date:date,time:time,platform:platform};};_this.handleSubmit=function(values){var idVal=_this.props.reminder.id;if(values.init!=null){idVal=values.id;}_this.props.onSubmit({id:idVal,event_type:values.event_type,color:values.color,topic:values.topic,platform:values.platform,date:values.date,time:values.time});};return _this;}_createClass(ReminderForm,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Formik,{initialValues:this.getInitialValues(),validationSchema:ReminderSchema,onSubmit:this.handleSubmit,children:/*#__PURE__*/_jsxs(Form,{className:\"w-full flex flex-col gap-3\",children:[/*#__PURE__*/_jsxs(FormFieldset,{children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:\"event_type\",children:\"Event Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(Field,{id:\"event_type\",name:\"event_type\",component:FormTextInput,placeholder:\"e.g.: Club Service\",className:\"flex-grow\"}),/*#__PURE__*/_jsx(Field,{name:\"color\",as:ReminderColorPicker,className:\"flex-shrink\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"event_type\"}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"color\"})]}),/*#__PURE__*/_jsxs(FormFieldset,{children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:\"topic\",children:\"Topic\"}),/*#__PURE__*/_jsx(Field,{id:\"topic\",name:\"topic\",component:FormTextInput,placeholder:\"e.g.: Metamorphosis\"}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"topic\"})]}),/*#__PURE__*/_jsxs(FormFieldset,{children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:\"date\",children:\"When?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(Field,{id:\"date\",name:\"date\",component:FormDatePicker,className:\"flex-grow\"}),/*#__PURE__*/_jsx(Field,{id:\"time\",name:\"time\",component:FormTimePicker,className:\"w-full sm:w-44\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"date\"}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"time\"})]}),/*#__PURE__*/_jsxs(FormFieldset,{children:[/*#__PURE__*/_jsx(FormLabel,{htmlFor:\"platform\",children:\"Platform\"}),/*#__PURE__*/_jsx(Field,{id:\"platform\",name:\"platform\",component:FormTextInput,placeholder:\"e.g.: Google Meet\"}),/*#__PURE__*/_jsx(ErrorMessage,{component:FormErrorMessage,name:\"platform\"})]}),/*#__PURE__*/_jsx(FormActions,{children:/*#__PURE__*/_jsxs(BaseButton,{type:\"submit\",className:\"bg-indigo-700 hover:bg-indigo-500 text-white\",children:[/*#__PURE__*/_jsx(CheckIcon,{svgClassName:\"w-6 h-6\"}),\"Confirm\"]})})]})});}}]);return ReminderForm;}(Component);export default ReminderForm;","map":{"version":3,"sources":["/home/suyash/calendar/src/components/reminders/ReminderForm.js"],"names":["React","Component","ErrorMessage","Field","Form","Formik","Yup","FormTextInput","FormDatePicker","FormErrorMessage","FormLabel","FormFieldset","BaseButton","FormActions","CheckIcon","DATE_FORMAT","DATE_REGEX","TIME_FORMAT","TIME_REGEX","FormTimePicker","ReminderColorPicker","ALL_COLORS","ReminderPropType","ReminderSchema","object","shape","event_type","string","max","required","topic","color","oneOf","date","matches","time","platform","ReminderForm","getInitialValues","props","reminder","handleSubmit","values","idVal","id","init","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormTextInput from '../shared/forms/FormTextInput';\nimport FormDatePicker from '../shared/forms/FormDatePicker';\nimport FormErrorMessage from '../shared/forms/FormErrorMessage';\nimport FormLabel from '../shared/forms/FormLabel';\nimport FormFieldset from '../shared/forms/FormFieldset';\nimport BaseButton from '../shared/buttons/BaseButton';\nimport FormActions from '../shared/forms/FormActions';\nimport CheckIcon from '../icons/CheckIcon';\nimport {\n  DATE_FORMAT,\n  DATE_REGEX,\n  TIME_FORMAT,\n  TIME_REGEX,\n} from '../../helpers/calendar';\nimport FormTimePicker from '../shared/forms/FormTimePicker';\nimport ReminderColorPicker from './ReminderColorPicker';\nimport { ALL_COLORS } from '../../helpers/colors';\nimport { ReminderPropType } from '../shared/prop-types/reminder';\n\nconst ReminderSchema = Yup.object().shape({\n  event_type: Yup.string()\n    .max(30, 'No more than 30 character, please.')\n    .required('Please enter Event Type (max. 30 characters).'),\n  topic: Yup.string()\n    .max(30, 'No more than 30 character, please.')\n    .required('Please enter Event Topic (max. 30 characters).'),\n  color: Yup.string()\n    .oneOf(ALL_COLORS, 'Color is invalid.')\n    .required('Please inform a color.'),\n  date: Yup.string()\n    .matches(DATE_REGEX, `Date must be valid (${DATE_FORMAT}).`)\n    .required('Please inform the day you want to get reminded.'),\n  time: Yup.string()\n    .matches(TIME_REGEX, `Time must be valid (${TIME_FORMAT}).`)\n    .required('Please inform the time of the day you want to get reminded.'),\n  platform: Yup.string()\n    .max(30, 'No more than 30 character, please.')\n    .required('Please enter Event platform (max. 30 characters).'),\n});\n\nclass ReminderForm extends Component {\n  static propTypes = {\n    reminder: ReminderPropType.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  getInitialValues = () => {\n    const { event_type, color,topic, date, time, platform } = this.props.reminder;\n\n    return {\n      event_type,\n      color,\n      topic,\n      date,\n      time,\n      platform,\n    };\n  };\n\n  handleSubmit = (values) => {\n    var idVal = this.props.reminder.id;\n\n    if(values.init!=null){\n      idVal = values.id;\n    }\n\n    this.props.onSubmit({\n      id: idVal,\n      event_type: values.event_type,\n      color: values.color,\n      topic: values.topic,\n      platform: values.platform,\n      date: values.date,\n      time: values.time,\n    });\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.getInitialValues()}\n        validationSchema={ReminderSchema}\n        onSubmit={this.handleSubmit}\n      >\n        <Form className=\"w-full flex flex-col gap-3\">\n          <FormFieldset>\n            <FormLabel htmlFor=\"event_type\">\n              Event Type\n            </FormLabel>\n            <div className=\"flex flex-row flex-wrap gap-2\">\n              <Field\n                id=\"event_type\"\n                name=\"event_type\"\n                component={FormTextInput}\n                placeholder=\"e.g.: Club Service\"\n                className=\"flex-grow\"\n              />\n              <Field\n                name=\"color\"\n                as={ReminderColorPicker}\n                className=\"flex-shrink\"\n              />\n            </div>\n            <ErrorMessage component={FormErrorMessage} name=\"event_type\" />\n            <ErrorMessage component={FormErrorMessage} name=\"color\" />\n          </FormFieldset>\n\n          <FormFieldset>\n            <FormLabel htmlFor=\"topic\">Topic</FormLabel>\n            <Field\n              id=\"topic\"\n              name=\"topic\"\n              component={FormTextInput}\n              placeholder=\"e.g.: Metamorphosis\"\n            />\n            <ErrorMessage component={FormErrorMessage} name=\"topic\" />\n          </FormFieldset>\n\n          <FormFieldset>\n            <FormLabel htmlFor=\"date\">When?</FormLabel>\n\n            <div className=\"flex flex-row flex-wrap gap-2\">\n              <Field\n                id=\"date\"\n                name=\"date\"\n                component={FormDatePicker}\n                className=\"flex-grow\"\n              />\n              <Field\n                id=\"time\"\n                name=\"time\"\n                component={FormTimePicker}\n                className=\"w-full sm:w-44\"\n              />\n            </div>\n            <ErrorMessage component={FormErrorMessage} name=\"date\" />\n            <ErrorMessage component={FormErrorMessage} name=\"time\" />\n          </FormFieldset>\n\n          <FormFieldset>\n            <FormLabel htmlFor=\"platform\">Platform</FormLabel>\n            <Field\n              id=\"platform\"\n              name=\"platform\"\n              component={FormTextInput}\n              placeholder=\"e.g.: Google Meet\"\n            />\n            <ErrorMessage component={FormErrorMessage} name=\"platform\" />\n          </FormFieldset>\n\n          <FormActions>\n            <BaseButton\n              type=\"submit\"\n              className=\"bg-indigo-700 hover:bg-indigo-500 text-white\"\n            >\n              <CheckIcon svgClassName=\"w-6 h-6\" />\n              Confirm\n            </BaseButton>\n          </FormActions>\n        </Form>\n      </Formik>\n    );\n  }\n}\n\nexport default ReminderForm;\n"]},"metadata":{},"sourceType":"module"}