{"ast":null,"code":"import React from'react';import classNames from'classnames';import{bindActionCreators}from'redux';import{connect}from'react-redux';import{DatePropType,DateReminderPropType}from'../shared/prop-types/date';import{getFormattedDateReminders}from'../../selectors/ui/calendar';import{editReminder,newReminder}from'../../actions/ui/reminder';import MonthlyCalendarDateReminder from'./MonthlyCalendarDateReminder';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MonthlyCalendarDate(_ref){var date=_ref.date,reminders=_ref.reminders,editReminder=_ref.editReminder,newReminder=_ref.newReminder;return/*#__PURE__*/_jsxs(\"li\",{onClick:function onClick(){return newReminder(date.key);},className:classNames('h-auto px-3 py-2 bg-white text-lg overflow-hidden',{'font-normal':!date.isWeekend,'text-indigo-600 font-bold':date.isWeekend&&!date.trailing,'text-gray-400':date.trailing}),children:[date.text,/*#__PURE__*/_jsx(\"ol\",{children:reminders.map(function(reminder){return/*#__PURE__*/_jsx(MonthlyCalendarDateReminder,{reminder:reminder,onClick:function onClick(e){e.stopPropagation();editReminder(reminder);}},reminder.id);})})]},date.key);}function mapStateToProps(state,ownProps){return{reminders:getFormattedDateReminders(state,{dateId:ownProps.date.key})};}function mapDispatchToProps(dispatch){return bindActionCreators({editReminder:editReminder,newReminder:newReminder},dispatch);}export default connect(mapStateToProps,mapDispatchToProps)(MonthlyCalendarDate);","map":{"version":3,"sources":["/home/suyash/calendar/src/components/calendar/MonthlyCalendarDate.js"],"names":["React","classNames","bindActionCreators","connect","DatePropType","DateReminderPropType","getFormattedDateReminders","editReminder","newReminder","MonthlyCalendarDateReminder","MonthlyCalendarDate","date","reminders","key","isWeekend","trailing","text","map","reminder","e","stopPropagation","id","mapStateToProps","state","ownProps","dateId","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,2BAAnD,CACA,OAASC,yBAAT,KAA0C,6BAA1C,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,2BAA1C,CACA,MAAOC,CAAAA,2BAAP,KAAwC,+BAAxC,C,wFAEA,QAASC,CAAAA,mBAAT,MAA6E,IAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,SAAwC,MAAxCA,SAAwC,CAA7BL,YAA6B,MAA7BA,YAA6B,CAAfC,WAAe,MAAfA,WAAe,CAC3E,mBACE,YAEE,OAAO,CAAE,yBAAMA,CAAAA,WAAW,CAACG,IAAI,CAACE,GAAN,CAAjB,EAFX,CAGE,SAAS,CAAEZ,UAAU,CACnB,mDADmB,CAEnB,CACE,cAAe,CAACU,IAAI,CAACG,SADvB,CAEE,4BAA6BH,IAAI,CAACG,SAAL,EAAkB,CAACH,IAAI,CAACI,QAFvD,CAGE,gBAAiBJ,IAAI,CAACI,QAHxB,CAFmB,CAHvB,WAYGJ,IAAI,CAACK,IAZR,cAcE,oBACGJ,SAAS,CAACK,GAAV,CAAc,SAACC,QAAD,qBACb,KAAC,2BAAD,EAEE,QAAQ,CAAEA,QAFZ,CAGE,OAAO,CAAE,iBAACC,CAAD,CAAO,CACdA,CAAC,CAACC,eAAF,GACAb,YAAY,CAACW,QAAD,CAAZ,CACD,CANH,EACOA,QAAQ,CAACG,EADhB,CADa,EAAd,CADH,EAdF,GACOV,IAAI,CAACE,GADZ,CADF,CA6BD,CAOD,QAASS,CAAAA,eAAT,CAAyBC,KAAzB,CAAgCC,QAAhC,CAA0C,CACxC,MAAO,CACLZ,SAAS,CAAEN,yBAAyB,CAACiB,KAAD,CAAQ,CAAEE,MAAM,CAAED,QAAQ,CAACb,IAAT,CAAcE,GAAxB,CAAR,CAD/B,CAAP,CAGD,CAED,QAASa,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAOzB,CAAAA,kBAAkB,CAAC,CAAEK,YAAY,CAAZA,YAAF,CAAgBC,WAAW,CAAXA,WAAhB,CAAD,CAAgCmB,QAAhC,CAAzB,CACD,CAED,cAAexB,CAAAA,OAAO,CACpBmB,eADoB,CAEpBI,kBAFoB,CAAP,CAGbhB,mBAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { DatePropType, DateReminderPropType } from '../shared/prop-types/date';\nimport { getFormattedDateReminders } from '../../selectors/ui/calendar';\nimport { editReminder, newReminder } from '../../actions/ui/reminder';\nimport MonthlyCalendarDateReminder from './MonthlyCalendarDateReminder';\n\nfunction MonthlyCalendarDate({ date, reminders, editReminder, newReminder }) {\n  return (\n    <li\n      key={date.key}\n      onClick={() => newReminder(date.key)}\n      className={classNames(\n        'h-auto px-3 py-2 bg-white text-lg overflow-hidden',\n        {\n          'font-normal': !date.isWeekend,\n          'text-indigo-600 font-bold': date.isWeekend && !date.trailing,\n          'text-gray-400': date.trailing,\n        }\n      )}\n    >\n      {date.text}\n\n      <ol>\n        {reminders.map((reminder) => (\n          <MonthlyCalendarDateReminder\n            key={reminder.id}\n            reminder={reminder}\n            onClick={(e) => {\n              e.stopPropagation();\n              editReminder(reminder);\n            }}\n          />\n        ))}\n      </ol>\n    </li>\n  );\n}\n\nMonthlyCalendarDate.propTypes = {\n  date: DatePropType.isRequired,\n  reminders: PropTypes.arrayOf(DateReminderPropType.isRequired).isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    reminders: getFormattedDateReminders(state, { dateId: ownProps.date.key }),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ editReminder, newReminder }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonthlyCalendarDate);\n"]},"metadata":{},"sourceType":"module"}