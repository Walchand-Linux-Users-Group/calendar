{"ast":null,"code":"import _objectSpread from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/suyash/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSelector}from'reselect';import{getDisplayTimeFromMillis,getMonthlyCalendarGrid as getMonthlyCalendarGridHelper}from'../../helpers/calendar';import{getDateReminders}from'../dates';import{getReminders}from'../reminders';import{getMonth}from'./month';export var getMonthlyCalendarGrid=createSelector([getMonth],function(month){return month!==null?getMonthlyCalendarGridHelper(month):[];});export var getFormattedDateReminders=createSelector([getDateReminders,getReminders],function(dateReminders,reminders){if(!dateReminders||!reminders)return[];return dateReminders.reduce(function(formatted,reminderId){var reminder=reminders[reminderId];return reminder?[].concat(_toConsumableArray(formatted),[_objectSpread(_objectSpread({},reminder),{},{displayTime:getDisplayTimeFromMillis(reminder.dateTime)})]):formatted;},[]).sort(function(a,b){return a.dateTime-b.dateTime;});});","map":{"version":3,"sources":["/home/suyash/calendar/src/selectors/ui/calendar.js"],"names":["createSelector","getDisplayTimeFromMillis","getMonthlyCalendarGrid","getMonthlyCalendarGridHelper","getDateReminders","getReminders","getMonth","month","getFormattedDateReminders","dateReminders","reminders","reduce","formatted","reminderId","reminder","displayTime","dateTime","sort","a","b"],"mappings":"+RAAA,OAASA,cAAT,KAA+B,UAA/B,CACA,OACEC,wBADF,CAEEC,sBAAsB,GAAIC,CAAAA,4BAF5B,KAGO,wBAHP,CAIA,OAASC,gBAAT,KAAiC,UAAjC,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,QAAT,KAAyB,SAAzB,CAEA,MAAO,IAAMJ,CAAAA,sBAAsB,CAAGF,cAAc,CAAC,CAACM,QAAD,CAAD,CAAa,SAACC,KAAD,CAAW,CAC1E,MAAOA,CAAAA,KAAK,GAAK,IAAV,CAAiBJ,4BAA4B,CAACI,KAAD,CAA7C,CAAuD,EAA9D,CACD,CAFmD,CAA7C,CAIP,MAAO,IAAMC,CAAAA,yBAAyB,CAAGR,cAAc,CACrD,CAACI,gBAAD,CAAmBC,YAAnB,CADqD,CAErD,SAACI,aAAD,CAAgBC,SAAhB,CAA8B,CAC5B,GAAI,CAACD,aAAD,EAAkB,CAACC,SAAvB,CAAkC,MAAO,EAAP,CAElC,MAAOD,CAAAA,aAAa,CACjBE,MADI,CACG,SAACC,SAAD,CAAYC,UAAZ,CAA2B,CACjC,GAAMC,CAAAA,QAAQ,CAAGJ,SAAS,CAACG,UAAD,CAA1B,CACA,MAAOC,CAAAA,QAAQ,8BAENF,SAFM,kCAIJE,QAJI,MAKPC,WAAW,CAAEd,wBAAwB,CAACa,QAAQ,CAACE,QAAV,CAL9B,KAQXJ,SARJ,CASD,CAZI,CAYF,EAZE,EAaJK,IAbI,CAaC,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACF,QAAF,CAAaG,CAAC,CAACH,QAAzB,EAbD,CAAP,CAcD,CAnBoD,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\nimport {\n  getDisplayTimeFromMillis,\n  getMonthlyCalendarGrid as getMonthlyCalendarGridHelper,\n} from '../../helpers/calendar';\nimport { getDateReminders } from '../dates';\nimport { getReminders } from '../reminders';\nimport { getMonth } from './month';\n\nexport const getMonthlyCalendarGrid = createSelector([getMonth], (month) => {\n  return month !== null ? getMonthlyCalendarGridHelper(month) : [];\n});\n\nexport const getFormattedDateReminders = createSelector(\n  [getDateReminders, getReminders],\n  (dateReminders, reminders) => {\n    if (!dateReminders || !reminders) return [];\n\n    return dateReminders\n      .reduce((formatted, reminderId) => {\n        const reminder = reminders[reminderId];\n        return reminder\n          ? [\n              ...formatted,\n              {\n                ...reminder,\n                displayTime: getDisplayTimeFromMillis(reminder.dateTime),\n              },\n            ]\n          : formatted;\n      }, [])\n      .sort((a, b) => a.dateTime - b.dateTime);\n  }\n);\n"]},"metadata":{},"sourceType":"module"}